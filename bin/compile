#!/bin/sh
set -e

echo "==> Setting up PostgreSQL focal archive APT source (with permission sanity checks)"

# Helper to fail with explanation if we don't have privilege
require_root() {
  if [ "$(id -u)" != "0" ]; then
    echo "ERROR: This buildpack needs to run as root to manipulate /var/lib/apt/lists and add APT sources."
    echo "Current UID: $(id -u). If youâ€™re on Dokku/herokuish, ensure the build environment executes buildpacks with root privileges."
    exit 1
  fi
}

# 0. Ensure we are root (apt operations require elevated privileges)
require_root

# 1. Ensure the apt lists directory and partial subdir exist with correct ownership
mkdir -p /var/lib/apt/lists/partial
chown -R root:root /var/lib/apt/lists
chmod 755 /var/lib/apt/lists
chmod 755 /var/lib/apt/lists/partial

# 2. Remove legacy/broken PGDG list if it points at main endpoint
if [ -f /etc/apt/sources.list.d/pgdg.list ]; then
  if grep -q 'apt.postgresql.org' /etc/apt/sources.list.d/pgdg.list; then
    rm -f /etc/apt/sources.list.d/pgdg.list
  fi
fi

# 3. Install minimal prerequisites quietly (curl, ca-certificates)
# Use quiet flags to reduce noise but still fail loudly on errors
apt-get update -qq
DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends curl ca-certificates

# 4. Import PostgreSQL signing key
mkdir -p /usr/share/postgresql-common/pgdg
curl -fsSL https://www.postgresql.org/media/keys/ACCC4CF8.asc \
  -o /usr/share/postgresql-common/pgdg/apt.postgresql.org.asc

# 5. Point to the archive mirror for focal
cat <<EOF > /etc/apt/sources.list.d/pgdg.list
deb [signed-by=/usr/share/postgresql-common/pgdg/apt.postgresql.org.asc] https://apt-archive.postgresql.org/pub/repos/apt focal-pgdg-archive main
EOF

# 6. Clean stale metadata and refresh
rm -rf /var/lib/apt/lists/*
mkdir -p /var/lib/apt/lists/partial
apt-get update -qq

echo "==> PostgreSQL focal archive APT source configured successfully"